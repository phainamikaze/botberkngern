const sendApi = require('./send');
const Lists = require('./lists');

const sendOwnedLists = async (senderId, type) => {
  try{
    const lists1 = await Lists.getOwnedForUser(senderId);
    await sendApi.sendLists(senderId, type.substring(0, 11), lists1, Number(type.substring(19)));
    return;
  }catch(e){
    return;
  }
};

const sendSharedLists = async (senderId, type) => {
  try{
    const lists2 = await Lists.getSharedToUser(senderId);
    await sendApi.sendLists(senderId, type.substring(0, 16), lists2, Number(type.substring(22)));
    return;
  }catch(e){
    return;
  }
};

const handleReceivePostback =async (event) => {
  const type = event.postback.payload;
  const senderId = event.sender.id;

  if (type.substring(0, 11) === 'owned_lists') {
    await sendOwnedLists(senderId, type);
    return;
  } else if (type.substring(0, 16) === 'subscribed_lists') {
    await sendSharedLists(senderId, type);
    return;
  } else if (type.substring(0, 11) === 'GET_STARTED') {
    await sendApi.sendWelcomeMessage(senderId);
    return;
  }else{
    return;
  }

  // sendApi.sendMessage(senderId, `Unknown Postback called: ${type}`);
};
const handleReceiveMessage = async (event) => {
  const message = event.message;
  const senderId = event.sender.id;

  // It's good practice to send the user a read receipt so they know
  // the bot has seen the message. This can prevent a user
  // spamming the bot if the requests take some time to return.
  await sendApi.sendReadReceipt(senderId);

  if (message.text) { 
    await sendApi.sendWelcomeMessage(senderId); 
    return;
  }else{
    return;
  }
};

module.exports = {
  handleReceivePostback,
  handleReceiveMessage
};
